name: dockercompose8758178452689036603
services:
  db:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      MSSQL_SA_PASSWORD: 1q2w3e4r@#$$
    image: mcr.microsoft.com/mssql/server
    networks:
      common_network: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: db-data
      target: /var/opt/mssql
      volume: {}
  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_USER: admin
    image: rabbitmq:management
    networks:
      common_network: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
  ui:
    build:
      context: C:\Projetos\EntregaJa
      dockerfile: src/Ui/Dockerfile
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: ui
    networks:
      common_network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\hamil\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hamil\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  common_network:
    name: dockercompose8758178452689036603_common_network
volumes:
  db-data:
    name: dockercompose8758178452689036603_db-data